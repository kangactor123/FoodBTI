{"version":3,"sources":["atom.ts","components/Header.tsx","components/BannerSection.tsx","components/ReplyButton.tsx","components/ButtonSection.tsx","components/ContentSection.tsx","components/Wrapper.tsx","routes/Home.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["isDarkAtom","atom","key","default","page","Wrapper","styled","div","props","theme","headerColor","Logo","span","HeadBtnColor","Header","setPaging","useSetRecoilState","onClick","Section","Banner","BannerSection","paging","useRecoilValue","console","log","Button","button","BtnColor","ReplyButton","text","StartDiv","ButtonSection","useRecoilState","upPage","prev","smoothAppear","keyframes","Contents","motion","marginBottom","ContentSection","Box","HomeBodyColor","Body","Container","bgColor","Home","Router","path","darkMode","btnColor","textColor","accentColor","lightMode","GlobalStyle","createGlobalStyle","ToggleBtn","isDark","App","setIsDark","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c75c895.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n  key: \"mode\",\n  default: true,\n});\n\nexport const page = atom({\n  key: \"page\",\n  default: 0,\n});\n","import { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { page } from \"../atom\";\n\nconst Wrapper = styled.div`\n  height: 10vh;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${(props) => props.theme.headerColor};\n`;\n\nconst Logo = styled.span`\n  font-size: 24px;\n  font-weight: 600;\n  margin-left: 10%;\n  color: ${(props) => props.theme.HeadBtnColor};\n  &:hover {\n    cursor: pointer;\n    color: red;\n  }\n`;\n\nfunction Header() {\n  const setPaging = useSetRecoilState(page);\n  const replay = () => {\n    setPaging(0);\n  };\n  return (\n    <Wrapper>\n      <Logo onClick={replay}>EatDa</Logo>\n    </Wrapper>\n  );\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { page } from \"../atom\";\n\nexport const Section = styled.div`\n  height: 10%;\n  position: relative;\n`;\n\nexport const Banner = styled.span`\n  position: absolute;\n  color: black;\n  font-size: 24px;\n  font-weight: 600;\n  top: 40px;\n  right: 70px;\n  letter-spacing: 3px;\n  user-select: none;\n`;\n\nfunction BannerSection() {\n  const paging = useRecoilValue(page);\n  console.log(`BannerSection Randering`);\n  return (\n    <Section>\n      <Banner>{paging == 0 ? \"EatDa 이 달의 컨텐츠!\" : `${paging}/8`}</Banner>\n    </Section>\n  );\n}\nexport default BannerSection;\n","import styled from \"styled-components\";\n\ninterface IReplyBtn {\n  text: string;\n  BtnColor: string;\n  onClick: () => void;\n}\n\nconst Button = styled.button<{ BtnColor: string }>`\n  width: 60%;\n  height: 60px;\n  background-color: ${(props) => props.BtnColor};\n  border: 0;\n  border-radius: 30px;\n  font-size: 18px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\n    rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n  &:hover {\n    cursor: pointer;\n    box-shadow: rgb(204, 219, 232) 3px 3px 6px 0px inset,\n      rgba(255, 255, 255, 0.5) -3px -3px 6px 1px inset;\n    font-size: 22px;\n    color: white;\n    transition: box-shadow 1s ease-in;\n    transition: font-size 0.1s;\n    transition: color 0.2s ease-in;\n  }\n`;\n\nfunction ReplyButton({ text, onClick, BtnColor }: IReplyBtn) {\n  return (\n    <Button onClick={onClick} BtnColor={BtnColor}>\n      {text}\n    </Button>\n  );\n}\n\nexport default ReplyButton;\n","import { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { page } from \"../atom\";\nimport ReplyButton from \"./ReplyButton\";\n\nconst Section = styled.div`\n  height: 30%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StartDiv = styled.div`\n  width: 60%;\n  border: 0;\n  background-color: tomato;\n  height: 60px;\n  border-radius: 30px;\n  color: white;\n  font-size: 24px;\n  text-align: center;\n  padding-top: 17px;\n  user-select: none;\n  &:hover {\n    cursor: pointer;\n    color: black;\n    box-shadow: 1px 1px 30px 1px rgb(143, 135, 135);\n    transition: color 1.5s;\n  }\n`;\n\nfunction ButtonSection() {\n  const [paging, setPaging] = useRecoilState(page);\n  const startQuiz = () => {\n    if (paging == 0) {\n      setPaging(1);\n    }\n  };\n  const upPage = () => {\n    if (paging < 9) {\n      setPaging((prev) => prev + 1);\n    }\n  };\n  return (\n    <Section>\n      {paging == 0 ? (\n        <StartDiv>\n          <div onClick={startQuiz}>테스트 시작하기</div>\n        </StartDiv>\n      ) : (\n        <>\n          <ReplyButton BtnColor=\"#74b9ff\" onClick={upPage} text=\"그렇다\" />\n          <br />\n          <ReplyButton BtnColor=\"#ff7675\" onClick={upPage} text=\"아니다\" />\n        </>\n      )}\n    </Section>\n  );\n}\n\nexport default ButtonSection;\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport { useRecoilValue } from \"recoil\";\nimport styled, { keyframes } from \"styled-components\";\nimport { page } from \"../atom\";\n\nconst Section = styled.div`\n  height: 60%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\ninterface IContents {\n  marginBottom?: number;\n}\n\nconst smoothAppear = keyframes`\n  from {\n    opacity:0;\n    transform:translateY(50px);\n  }\n  to {\n    opacity:1;\n    transform:translateY(0);\n  }\n`;\n\nconst Contents = styled(motion.div)<IContents>`\n  @import url(\"https://fonts.googleapis.com/css2?family=Amatic+SC:wght@700&family=Song+Myung&display=swap\");\n  width: 70%;\n  margin: 0 auto;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  line-height: 50px;\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : 0)};\n  font-size: 24px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  color: rgb(143, 135, 135);\n  font-family: \"Amatic SC\", cursive;\n  font-family: \"Song Myung\", serif;\n  user-select: none;\n  span {\n    font-size: 36px;\n    margin-right: 10px;\n  }\n  animation: ${smoothAppear} 1.5s;\n`;\n\nfunction ContentSection() {\n  const question = [\n    \"식당에서 밑반찬을 다 먹었을 때 셀프바가 있는지 먼저 살펴보는 편이다.\",\n    \"식당에 들어가서 앉았는데 벨을 눌러도, 5분을 앉아있어도 직원이 안온다. 이때 큰 소리로 주문할 수 있다.\",\n    \"저기압 일 땐 고기앞으로, 기분이 고기압일 땐 고기앞으로.\",\n    \"하루 3끼 내 밥상에 육류가 없으면 하루종일 기분이 좋지 않다.\",\n    \"스트레스를 받으면 뭐 먹을지 고민하는 편이다.\",\n    \"옆자리 선배가 하루종일 갈군다면 당이 땡기는 편이다.\",\n    \"나는 점심메뉴를 고르는데 1시간 이상이 소요가 된다. 혹은 점심 메뉴는 옆자리 동료가 고른 메뉴를 먹는 편이다.\",\n    \"지금 당신은 뭘 먹을지 정했다.\",\n  ];\n  const paging = useRecoilValue(page);\n  console.log(`ContentSection ReRendering`);\n  return (\n    <Section>\n      {paging == 0 ? (\n        <>\n          <Contents marginBottom={24}>\n            <span>😳</span>오늘 저녁엔 뭐 먹지?\n          </Contents>\n          <Contents>내 성향 테스트 해보고 추천 메뉴도 알아보자!</Contents>\n        </>\n      ) : (\n        <Contents>{question[paging - 1]}</Contents>\n      )}\n    </Section>\n  );\n}\n\nexport default ContentSection;\n","import { Link } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { page } from \"../atom\";\nimport BannerSection from \"./BannerSection\";\nimport ButtonSection from \"./ButtonSection\";\nimport ContentSection from \"./ContentSection\";\n\nexport const Box = styled.div`\n  width: 60%;\n  height: 90vh;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.HomeBodyColor};\n`;\n\nexport const Body = styled.div`\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 0 30px rgb(0 0 0/ 30%);\n  height: 100%;\n`;\n\nfunction Wrapper() {\n  const paging = useRecoilValue(page);\n\n  return (\n    <Box>\n      <Body>\n        {paging < 9 ? (\n          <>\n            <BannerSection />\n            <ContentSection />\n            <ButtonSection />\n          </>\n        ) : null}\n      </Body>\n    </Box>\n  );\n}\n\nexport default Wrapper;\n","import Header from \"../components/Header\";\nimport styled from \"styled-components\";\nimport Wrapper from \"../components/Wrapper\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 90vh;\n  background-color: ${(props) => props.theme.bgColor};\n`;\n\n//StartBtn 클릭시 새로운 페이지로 전환\n//퀴즈 시작 (스테이트로 관리)\n//상태관리는 recoil로\nfunction Home() {\n  return (\n    <>\n      <Header />\n      <Container>\n        <Wrapper />\n      </Container>\n    </>\n  );\n}\n\nexport default Home;\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkMode: DefaultTheme = {\n  btnColor: \"#2d3436\",\n  bgColor: \"#636e72\",\n  textColor: \"whitesmoke\",\n  accentColor: \"#9c88ff\",\n  headerColor: \"white\",\n  HomeBodyColor: \"#2d3436\",\n  HeadBtnColor: \"#2d3436\",\n};\n\nexport const lightMode: DefaultTheme = {\n  btnColor: \"#2f3640\",\n  bgColor: \"whitesmoke\",\n  textColor: \"#2d3436\",\n  accentColor: \"#9c88ff\",\n  headerColor: \"navy\",\n  HomeBodyColor: \"whitesmoke\",\n  HeadBtnColor: \"whitesmoke\",\n};\n","import { useRecoilState, useSetRecoilState } from \"recoil\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { isDarkAtom } from \"./atom\";\nimport Router from \"./Router\";\nimport { darkMode, lightMode } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: 'Source Sans Pro', sans-serif;\n  }\n  a {\n    text-decoration: none;\n    color:inherit;\n  }\n`;\nconst ToggleBtn = styled.div<{ isDark: boolean }>`\n  position: absolute;\n  top: 15px;\n  left: 250px;\n  width: 80px;\n  height: 40px;\n  border: 0;\n  border-radius: 25px;\n  color: ${(props) => (props.isDark ? \"black\" : \"white\")};\n  /* color: ${(props) => props.theme.HeadBtnColor}; */\n  background-color: ${(props) => (props.isDark ? \"whitesmoke\" : \"#2d3436\")};\n  text-align: center;\n  font-weight: 600;\n  padding-top: 12px;\n  z-index: 1;\n  &:hover {\n    cursor: pointer;\n    font-weight: 900;\n    box-shadow: 1px 1px 30px 1px rgb(143, 135, 135);\n  }\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useRecoilState(isDarkAtom);\n  const toggleMode = () => {\n    setIsDark((prev) => !prev);\n  };\n  return (\n    <>\n      <ToggleBtn isDark={isDark} onClick={toggleMode}>\n        {isDark ? \"Light\" : \"Dark\"}\n      </ToggleBtn>\n      <ThemeProvider theme={isDark ? lightMode : darkMode}>\n        <Router />\n        <GlobalStyle />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}