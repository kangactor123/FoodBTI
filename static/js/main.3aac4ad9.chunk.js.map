{"version":3,"sources":["atom.ts","components/Header.tsx","components/BannerSection.tsx","components/ReplyButton.tsx","components/ButtonSection.tsx","components/ContentSection.tsx","getMBTI.ts","components/ResultSection.tsx","components/Wrapper.tsx","routes/Home.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["isDarkAtom","atom","key","default","page","Count","MBTI","Showing","Wrapper","styled","div","props","theme","headerColor","Box","Logo","span","HeadBtnColor","Header","setPaging","useSetRecoilState","setMbti","onClick","Section","Banner","BannerSection","paging","useRecoilValue","Button","button","BtnColor","ReplyButton","text","StartDiv","ButtonSection","useRecoilState","count","setCount","showing","setShowing","upPage","value","indexOf","prev","countValue","console","log","motion","smoothAppear","keyframes","Contents","marginBottom","ContentSection","name","desc","food","url","this","getMbti","mbti","map","Map","set","get","spinner","Loading","LoadingMsg","MBTIContent","textColor","DescContent","ImgWrapper","Img","img","ResultDesc","ResultSection","useState","isLoading","setLoading","data","setTimeout","src","process","HomeBodyColor","Body","useEffect","AnimatePresence","Container","bgColor","Home","Helmet","Router","path","darkMode","btnColor","accentColor","lightMode","GlobalStyle","createGlobalStyle","ToggleBtn","isDark","App","setIsDark","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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UC,aAAc,GAAxB,UACE,gDADF,0DAGA,cAACD,EAAD,qIAGF,cAACA,EAAD,UA9BW,CACf,2LACA,sLACA,wMACA,2QACA,qJACA,4HACA,sJACA,8JACA,2HACA,6HACA,yKACA,8IACA,6RACA,oJACA,8LACA,iFAcwBxB,EAAS,Q,kBCnF/BpB,G,cAMJ,WAAY+C,EAAcC,EAAcC,EAAcC,GAAc,0BALpEH,UAKmE,OAJnEC,UAImE,OAHnEC,UAGmE,OAFnEC,SAEmE,EACjEC,KAAKJ,KAAOA,EACZI,KAAKH,KAAOA,EACZG,KAAKF,KAAOA,EACZE,KAAKD,IAAMA,KAIFE,GAAU,SAACC,GACtB,IAAIC,EAAM,IAAIC,IAiJd,OAhJAD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,2MACA,8CACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,oSACA,2DACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,+QACA,8CACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,oPACA,0DACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,mUACA,+CACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,8SACA,oCACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,iNACA,8CACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,wKACA,oDACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,oQACA,8CACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,sQACA,wCACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,yQACA,8CACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,6MACA,qCACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,mTACA,4CACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,4SACA,iEACA,oBAGJsD,EAAIE,IACF,OACA,IAAIxD,GACF,OACA,2QACA,oDACA,oBAGJsD,EAA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","file":"static/js/main.3aac4ad9.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n  key: \"mode\",\n  default: true,\n});\n\nexport const page = atom({\n  key: \"page\",\n  default: 0,\n});\n\nexport const Count = atom({\n  key: \"value\",\n  default: 0,\n});\n\nexport const MBTI = atom({\n  key: \"mbti\",\n  default: \"\",\n});\n\nexport const Showing = atom({\n  key: \"showing\",\n  default: false,\n});\n","import { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { MBTI, page } from \"../atom\";\n\nconst Wrapper = styled.div`\n  height: 10vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${(props) => props.theme.headerColor};\n`;\n\nconst Box = styled.div`\n  width: 60%;\n  margin: 0 auto;\n`;\n\nconst Logo = styled.span`\n  margin-left: 3%;\n  font-size: 24px;\n  font-weight: 600;\n  user-select: none;\n  color: ${(props) => props.theme.HeadBtnColor};\n  &:hover {\n    cursor: pointer;\n    color: red;\n  }\n`;\n\nfunction Header() {\n  const setPaging = useSetRecoilState(page);\n  const setMbti = useSetRecoilState(MBTI);\n  const replay = () => {\n    setPaging(0);\n    setMbti(\"\");\n  };\n  return (\n    <Wrapper>\n      <Box>\n        <Logo onClick={replay}>EatDa</Logo>\n      </Box>\n    </Wrapper>\n  );\n}\n\nexport default Header;\n","import { useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { page } from \"../atom\";\n\nexport const Section = styled.div`\n  height: 10%;\n  position: relative;\n`;\n\nexport const Banner = styled.span`\n  position: absolute;\n  color: black;\n  font-size: 1.2rem;\n  font-weight: 600;\n  top: 40px;\n  right: 70px;\n  letter-spacing: 3px;\n  user-select: none;\n`;\n\nfunction BannerSection() {\n  const paging = useRecoilValue(page);\n  return (\n    <Section>\n      <Banner>{paging === 0 ? \"EatDa 이 달의 컨텐츠!\" : `${paging}/16`}</Banner>\n    </Section>\n  );\n}\nexport default BannerSection;\n","import styled from \"styled-components\";\n\ninterface IReplyBtn {\n  text: string;\n  BtnColor: string;\n  onClick: () => void;\n}\n\nconst Button = styled.button<{ BtnColor: string }>`\n  width: 40vw;\n  height: 8vh;\n  background-color: ${(props) => props.BtnColor};\n  border: 0;\n  border-radius: 30px;\n  font-size: 1.2rem;\n  user-select: none;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\n    rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n  &:hover {\n    cursor: pointer;\n    box-shadow: rgb(204, 219, 232) 3px 3px 6px 0px inset,\n      rgba(255, 255, 255, 0.5) -3px -3px 6px 1px inset;\n    font-size: 1.8vw;\n    color: white;\n    transition: box-shadow 1s ease-in;\n    transition: font-size 0.1s;\n    transition: color 0.2s ease-in;\n  }\n`;\n\nfunction ReplyButton({ text, onClick, BtnColor }: IReplyBtn) {\n  return (\n    <Button onClick={onClick} BtnColor={BtnColor}>\n      {text}\n    </Button>\n  );\n}\n\nexport default ReplyButton;\n","import { useRecoilState, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { Count, MBTI, page, Showing } from \"../atom\";\nimport ReplyButton from \"./ReplyButton\";\n\nconst Section = styled.div`\n  height: 30%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StartDiv = styled.div`\n  width: 60%;\n  border: 0;\n  background-color: tomato;\n  height: 60px;\n  border-radius: 30px;\n  color: white;\n  font-size: 1.7rem;\n  text-align: center;\n  padding-top: 17px;\n  user-select: none;\n  &:hover {\n    cursor: pointer;\n    color: black;\n    box-shadow: 1px 1px 30px 1px rgb(143, 135, 135);\n    transition: color 1.5s;\n  }\n`;\n\nfunction ButtonSection() {\n  const [paging, setPaging] = useRecoilState(page);\n  const [count, setCount] = useRecoilState(Count);\n  const setMbti = useSetRecoilState(MBTI);\n  const [showing, setShowing] = useRecoilState(Showing);\n\n  const startQuiz = () => {\n    if (paging === 0) {\n      setPaging(1);\n    }\n  };\n  const countValue = (paging: number, value: number) => {\n    if ([1, 2, 3, 4].indexOf(paging) !== -1) {\n      setCount((prev) => prev + value);\n      if (paging === 4) {\n        setMbti((prev) => {\n          if (count < 2) {\n            return prev + \"I\";\n          } else {\n            return prev + \"E\";\n          }\n        });\n        setCount(0);\n      }\n    } else if ([5, 6, 7, 8].indexOf(paging) !== -1) {\n      setCount((prev) => prev + value);\n      if (paging === 8) {\n        setMbti((prev) => {\n          if (count < 2) {\n            return prev + \"V\";\n          } else {\n            return prev + \"M\";\n          }\n        });\n        setCount(0);\n      }\n    } else if ([9, 10, 11, 12].indexOf(paging) !== -1) {\n      setCount((prev) => prev + value);\n      if (paging === 12) {\n        setMbti((prev) => {\n          if (count < 2) {\n            return prev + \"W\";\n          } else {\n            return prev + \"S\";\n          }\n        });\n        setCount(0);\n      }\n    } else if ([13, 14, 15, 16].indexOf(paging) !== -1) {\n      setCount((prev) => prev + value);\n      if (paging === 16) {\n        setMbti((prev) => {\n          if (count < 2) {\n            return prev + \"P\";\n          } else {\n            return prev + \"A\";\n          }\n        });\n        setCount(0);\n      }\n    }\n  };\n  const upPage = (value: number) => {\n    if (paging < 17) {\n      countValue(paging, value);\n      setPaging((prev) => prev + 1);\n      setShowing((prev) => !prev);\n      console.log(showing);\n    }\n  };\n  return (\n    <Section>\n      {paging === 0 ? (\n        <StartDiv>\n          <div onClick={startQuiz}>테스트 시작하기</div>\n        </StartDiv>\n      ) : (\n        <>\n          <ReplyButton\n            BtnColor=\"#74b9ff\"\n            onClick={() => {\n              upPage(1);\n            }}\n            text=\"그렇다\"\n          />\n          <br />\n          <ReplyButton\n            BtnColor=\"#ff7675\"\n            onClick={() => {\n              upPage(0);\n            }}\n            text=\"아니다\"\n          />\n        </>\n      )}\n    </Section>\n  );\n}\n\nexport default ButtonSection;\n","import { motion } from \"framer-motion\";\nimport { useRecoilValue } from \"recoil\";\nimport styled, { keyframes } from \"styled-components\";\nimport { page } from \"../atom\";\n\nconst Section = styled(motion.div)`\n  height: 60%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\ninterface IContents {\n  marginBottom?: number;\n}\n\nconst smoothAppear = keyframes`\n  from {\n    opacity:0;\n    transform:translateY(50px);\n  }\n  to {\n    opacity:1;\n    transform:translateY(0);\n  }\n`;\n\nexport const Contents = styled(motion.div)<IContents>`\n  @import url(\"https://fonts.googleapis.com/css2?family=Amatic+SC:wght@700&family=Song+Myung&display=swap\");\n  width: 70%;\n  margin: 0 auto;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  line-height: 50px;\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : 0)};\n  font-size: 1.4rem;\n  font-weight: 600;\n  letter-spacing: 1px;\n  color: rgb(143, 135, 135);\n  font-family: \"Amatic SC\", cursive;\n  font-family: \"Song Myung\", serif;\n  user-select: none;\n  span {\n    font-size: 2rem;\n    margin-right: 10px;\n  }\n  animation: ${smoothAppear} 1.5s;\n`;\n\nfunction ContentSection() {\n  const question = [\n    \"식당에서 밑반찬을 다 먹었을 때 셀프바가 있는지 먼저 살펴보는 편이다.\",\n    \"여행에 가면 아무곳이나 갈 수 없다. 무조건 찾아놓은 맛집만 가야한다.\",\n    \"정말 가고싶은 맛집이다. 웨이팅이 앞에 15팀이 있다. 대기 시간 1시간. 기다릴까?\",\n    \"식당에 들어가서 앉았는데 벨을 눌러도, 5분을 앉아있어도 직원이 안온다. 이때 큰 소리로 주문할 수 있다.\",\n    \"웨이트를 하지 않아도 매일 단백질 권장 섭취량은 필수다.\",\n    \"일주일에 한 번 삼겹살을 먹지 않으면 섭섭하다.\",\n    \"저기압 일 땐 고기앞으로, 기분이 고기압일 땐 고기앞으로.\",\n    \"하루 3끼 내 밥상에 육류가 없으면 하루종일 기분이 좋지 않다.\",\n    \"스트레스를 받으면 뭐 먹을지 고민하는 편이다.\",\n    \"운전을 할 때 항상 입에 사탕을 넣어놓는 편이다.\",\n    \"점심을 배부르게 먹은 당신, 하지만 디저트 먹을 공간은 남아있다.\",\n    \"옆자리 선배가 하루종일 갈군다면 당이 땡기는 편이다.\",\n    \"나는 점심메뉴를 고르는데 1시간 이상이 소요가 된다. 혹은 점심 메뉴는 옆자리 동료가 고른 메뉴를 먹는 편이다.\",\n    \"아침에 출근하면 뭐 먹을지 생각하는게 업무의 시작이다.\",\n    \"사랑하는 사람과의 데이트, 언제나 항상 '너가 맛있는건 나도 맛있어' 이다.\",\n    \"지금 당신은 뭘 먹을지 정했다.\",\n  ];\n  const paging = useRecoilValue(page);\n\n  return (\n    <Section>\n      {paging === 0 ? (\n        <>\n          <Contents marginBottom={24}>\n            <span>😳</span>오늘 저녁엔 뭐 먹지?\n          </Contents>\n          <Contents>내 성향 테스트 해보고 추천 메뉴도 알아보자!</Contents>\n        </>\n      ) : (\n        <Contents>{question[paging - 1]}</Contents>\n      )}\n    </Section>\n  );\n}\n\nexport default ContentSection;\n","class MBTI {\n  name: string;\n  desc: string;\n  food: string;\n  url: string;\n\n  constructor(name: string, desc: string, food: string, url: string) {\n    this.name = name;\n    this.desc = desc;\n    this.food = food;\n    this.url = url;\n  }\n}\n\nexport const getMbti = (mbti: string) => {\n  let map = new Map<string, MBTI>();\n  map.set(\n    \"EMWA\",\n    new MBTI(\n      \"EMWA\",\n      \"먹는건 내 삶의 낙!! 음식이 삶의 전부며 외향적 타입의 당신은 육식 동물 스타일\",\n      \"양갈비 스테이크\",\n      \"/image/EMWA.png\"\n    )\n  );\n  map.set(\n    \"IVSP\",\n    new MBTI(\n      \"IVSP\",\n      \"정말 만사가 귀찮은 당신. 하루종일 누워있는게 제일 편한 당신. 그나마 건강을 위해 채식 위주의 식단을 하는 당신!\",\n      \"샐러디 탄단지 샐러드\",\n      \"/image/IVSP.png\"\n    )\n  );\n  map.set(\n    \"IMSP\",\n    new MBTI(\n      \"IMSP\",\n      \"...! 이게 나의 모든 것 나가기도 귀찮고 먹는것도 귀찮아. 누가 불러도 귀찮아. 하지만 나는 고기는 먹고싶어.\",\n      \"직화구이 삼겹살\",\n      \"/image/IMSP.png\"\n    )\n  );\n  map.set(\n    \"EVSP\",\n    new MBTI(\n      \"EVSP\",\n      \"먹는건 좋지만 건강을 위해. 먹는걸 좋아하지만 건강을 신경쓰는 당신은 몸도 생활습관도 최고!\",\n      \"균형잡힌 전주비빔밥\",\n      \"/image/EVSP.png\"\n    )\n  );\n  map.set(\n    \"EMSP\",\n    new MBTI(\n      \"EMSP\",\n      \"먹는건 좋아. 근데 뭐 먹지? 먹는걸 좋아하지만 적극적으로 찾지 않는 스타일. 하지만 막상 가면 무한리필처럼 리필해먹는 당신!\",\n      \"두끼 즉석 떡볶이\",\n      \"/image/EMSP.png\"\n    )\n  );\n  map.set(\n    \"IVSA\",\n    new MBTI(\n      \"IVSA\",\n      \"나가기도 귀찮고 먹는것도.. 만사 귀찮은 당신. 움직이는게 없어서 칼로리도 낮은걸 찾는 당신은 정말 나무늘보 스타일\",\n      \"햇반 + 컵라면\",\n      \"/image/IVSA.png\"\n    )\n  );\n  map.set(\n    \"IMSA\",\n    new MBTI(\n      \"IMSA\",\n      \"나가기는 귀찮아. 나가기는 귀찮지만 고기없이는 못사는 당신은 배송의 민족성 VIP!\",\n      \"직화구이 삼겹살\",\n      \"/image/IMSP.png\"\n    )\n  );\n  map.set(\n    \"EVSA\",\n    new MBTI(\n      \"EVSA\",\n      \"적극적으로 건강한걸 찾는 당신. 점심엔 샌드위치, 저녁엔 샐러드\",\n      \"스타벅스 치아바타\",\n      \"/image/EVSA.png\"\n    )\n  );\n  map.set(\n    \"EMSA\",\n    new MBTI(\n      \"EMSA\",\n      \"평일은 집, 주말은 모두 외식파 퇴근 후는 힘들어서 집에서. 하지만 주말엔 맛있는게 없으면 슬픈 당신!\",\n      \"프랑스식 가정식\",\n      \"/image/EMSA.png\"\n    )\n  );\n  map.set(\n    \"IVWP\",\n    new MBTI(\n      \"IVWP\",\n      \"오늘은 그냥 집에서 샐러드! 야채를 선호하는 당신은 나가기도 귀찮아 저녁은 집에서 샐러드를 먹는편\",\n      \"편의점 샐러드\",\n      \"/image/IVWP.png\"\n    )\n  );\n  map.set(\n    \"IMWP\",\n    new MBTI(\n      \"IMWP\",\n      \"이번주는 어디에서 뭘 먹을까? 맛있는걸 항상 함께하는 당신. 하지만 혼자는 힘들어 항상 누군가와 함께.\",\n      \"립아이 스테이크\",\n      \"/image/IMWP.png\"\n    )\n  );\n  map.set(\n    \"EVWP\",\n    new MBTI(\n      \"EVWP\",\n      \"이번주는 어디서 샐러드를? 맛있는걸 좋아하지만 야채와 함께하면 더욱 즐겁지.\",\n      \"샐러드 맛집(?)\",\n      \"/image/EVWP.png\"\n    )\n  );\n  map.set(\n    \"IMWA\",\n    new MBTI(\n      \"IMWA\",\n      \"먹는건 즐겁지만 시키는건 어려워.. 먹는걸 즐겨하지만 주문기엔 너무 어려운 당신. 리필하는것은 세상에서 제일 힘들어\",\n      \"KFC 징거버거 세트\",\n      \"/image/IMWA.png\"\n    )\n  );\n  map.set(\n    \"IVWA\",\n    new MBTI(\n      \"IVWA\",\n      \"맛있는 샐러드를 찾으러~ 맛있는 샐러드를 찾으러 적극적으로 탐험한다! 하지만 야채를 추가하는건 조금은 어려운 일\",\n      \"샐러디 칠리베이컨 웜볼\",\n      \"/image/IVWA.png\"\n    )\n  );\n  map.set(\n    \"EVWA\",\n    new MBTI(\n      \"EVWA\",\n      \"먹는건 삶의 낙 하지만 야채만.. 먹는걸 즐기는 당신은 천부적인 대식가 스타일! 하지만 나는 주로 채식파.\",\n      \"에그마요 샌드위치\",\n      \"/image/EVWA.png\"\n    )\n  );\n  map.set(\n    \"EMWP\",\n    new MBTI(\n      \"EMWP\",\n      \"주말만 맛집탐험? nono~ 매일이 맛집 먹는것이 내 직업이자 취미이자 모든 것! 대한민국 맛집은 나의 집!\",\n      \"닭 한마리\",\n      \"/image/EMWP.png\"\n    )\n  );\n  return map.get(mbti);\n};\n","import { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport styled, { keyframes } from \"styled-components\";\nimport { MBTI } from \"../atom\";\nimport { getMbti } from \"../getMBTI\";\nimport { Contents } from \"./ContentSection\";\n\nconst spinner = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Loading = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  div {\n    box-sizing: border-box;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 64px;\n    height: 64px;\n    margin-top: -32px;\n    margin-left: -32px;\n    border-radius: 50%;\n    border: 8px solid transparent;\n    border-top-color: #f19022;\n    border-bottom-color: #f19022;\n    animation: ${spinner} 0.8s ease infinite;\n  }\n`;\n\nconst LoadingMsg = styled.div`\n  display: flex;\n  width: 90%;\n  margin-right: auto;\n  margin-left: auto;\n  justify-content: center;\n  align-items: center;\n  margin-top: 50vh;\n  font-size: 1.4rem;\n  font-weight: 400;\n  letter-spacing: 1px;\n  user-select: none;\n  span {\n    margin-right: 10px;\n    font-size: 2rem;\n  }\n`;\n\nconst MBTIContent = styled(Contents)`\n  width: 100%;\n  margin-top: 1%;\n  height: 15%;\n  font-size: 1.2rem;\n  span {\n    font-weight: 700;\n    font-size: 1.6rem;\n    margin: 0 10px 0 10px;\n    color: ${(props) => props.theme.textColor};\n  }\n`;\nconst DescContent = styled(Contents)`\n  justify-content: left;\n  width: 90%;\n  font-size: 1.2rem;\n  font-family: \"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\", sans-serif;\n  color: black;\n  span {\n    margin-left: 10px;\n    font-size: 1.8rem;\n    color: navy;\n  }\n`;\n\nconst ImgWrapper = styled.div`\n  box-shadow: 1px 1px 30px 1px rgb(143, 135, 135);\n  width: 100%;\n  height: 47vh;\n  margin: 0 auto;\n`;\n\nconst Img = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ResultDesc = styled(Contents)`\n  text-align: left;\n  color: black;\n  width: 90%;\n  font-size: 1.2rem;\n  font-family: \"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\", sans-serif;\n  letter-spacing: 2px;\n`;\n\nfunction ResultSection() {\n  const [isLoading, setLoading] = useState(true);\n  const mbti = useRecoilValue(MBTI);\n  const data = getMbti(mbti); //mbti 객체 리턴\n  setTimeout(() => {\n    setLoading(false);\n  }, 2000);\n  console.log(`${mbti}: ${getMbti(mbti)}`);\n\n  return (\n    <>\n      {isLoading ? (\n        <>\n          <LoadingMsg>\n            <span>🤔</span>당신의 성향을 파악중입니다!\n          </LoadingMsg>\n          <Loading>\n            <div></div>\n          </Loading>\n        </>\n      ) : (\n        <>\n          <ImgWrapper>\n            <Img src={process.env.PUBLIC_URL + data?.url} />\n          </ImgWrapper>\n          <MBTIContent>\n            당신의 FoodBTI는 ...\n            <span>{data?.name}</span>\n            입니다.\n          </MBTIContent>\n          <ResultDesc>- {data?.desc}</ResultDesc>\n          <DescContent>\n            - 오늘 저녁 메뉴는? <span> {data?.food}</span>\n          </DescContent>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default ResultSection;\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { page, Showing } from \"../atom\";\nimport BannerSection from \"./BannerSection\";\nimport ButtonSection from \"./ButtonSection\";\nimport ContentSection from \"./ContentSection\";\nimport ResultSection from \"./ResultSection\";\n\nexport const Box = styled(motion.div)`\n  max-width: 650px;\n  height: 90vh;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.HomeBodyColor};\n  box-shadow: 0 0 30px rgb(0 0 0/ 30%);\n`;\n\nexport const Body = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nfunction Wrapper() {\n  const paging = useRecoilValue(page);\n  const [showing, setShowing] = useRecoilState(Showing);\n  useEffect(() => {\n    if (showing === false) {\n      setTimeout(() => {\n        setShowing((prev) => !prev);\n      }, 1000);\n    }\n  }, [showing]);\n\n  return (\n    <AnimatePresence>\n      <Box>\n        {paging < 17 ? (\n          <Body>\n            <BannerSection />\n            <ContentSection />\n            <ButtonSection />\n          </Body>\n        ) : (\n          <Body>\n            <ResultSection />\n          </Body>\n        )}\n      </Box>\n    </AnimatePresence>\n  );\n}\n\nexport default Wrapper;\n","import Header from \"../components/Header\";\nimport styled from \"styled-components\";\nimport Wrapper from \"../components/Wrapper\";\nimport Helmet from \"react-helmet\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 90vh;\n  background-color: ${(props) => props.theme.bgColor};\n`;\n\n//StartBtn 클릭시 새로운 페이지로 전환\n//퀴즈 시작 (스테이트로 관리)\n//상태관리는 recoil로\nfunction Home() {\n  return (\n    <>\n      <Helmet>\n        <title>FOODBTI</title>\n      </Helmet>\n      <Header />\n      <Container>\n        <Wrapper />\n      </Container>\n    </>\n  );\n}\n\nexport default Home;\n","import { Helmet } from \"react-helmet\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkMode: DefaultTheme = {\n  btnColor: \"#2d3436\",\n  bgColor: \"#636e72\",\n  textColor: \"whitesmoke\",\n  accentColor: \"#9c88ff\",\n  headerColor: \"white\",\n  HomeBodyColor: \"#2d3436\",\n  HeadBtnColor: \"#2d3436\",\n};\n\nexport const lightMode: DefaultTheme = {\n  btnColor: \"#2f3640\",\n  bgColor: \"whitesmoke\",\n  textColor: \"#2d3436\",\n  accentColor: \"#9c88ff\",\n  headerColor: \"navy\",\n  HomeBodyColor: \"whitesmoke\",\n  HeadBtnColor: \"whitesmoke\",\n};\n","import { Helmet } from \"react-helmet\";\nimport { useRecoilState } from \"recoil\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { isDarkAtom } from \"./atom\";\nimport Router from \"./Router\";\nimport { darkMode, lightMode } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: 'Source Sans Pro', sans-serif;\n  }\n  a {\n    text-decoration: none;\n    color:inherit;\n  }\n`;\nconst ToggleBtn = styled.div<{ isDark: boolean }>`\n  position: absolute;\n  top: 15px;\n  right: 20%;\n  width: 80px;\n  height: 40px;\n  border: 0;\n  border-radius: 25px;\n  color: ${(props) => (props.isDark ? \"black\" : \"white\")};\n  /* color: ${(props) => props.theme.HeadBtnColor}; */\n  background-color: ${(props) => (props.isDark ? \"whitesmoke\" : \"#2d3436\")};\n  text-align: center;\n  font-weight: 600;\n  padding-top: 12px;\n  z-index: 1;\n  &:hover {\n    cursor: pointer;\n    font-weight: 900;\n    box-shadow: 1px 1px 30px 1px rgb(143, 135, 135);\n  }\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useRecoilState(isDarkAtom);\n  const toggleMode = () => {\n    setIsDark((prev) => !prev);\n  };\n  return (\n    <>\n      <ToggleBtn isDark={isDark} onClick={toggleMode}>\n        {isDark ? \"Light\" : \"Dark\"}\n      </ToggleBtn>\n      <ThemeProvider theme={isDark ? lightMode : darkMode}>\n        <Router />\n        <GlobalStyle />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}